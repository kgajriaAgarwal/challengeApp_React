[{"/Users/karishmagajria/React/challenge-react/src/index.js":"1","/Users/karishmagajria/React/challenge-react/src/App.js":"2","/Users/karishmagajria/React/challenge-react/src/reportWebVitals.js":"3","/Users/karishmagajria/React/challenge-react/src/Header.jsx":"4","/Users/karishmagajria/React/challenge-react/src/ShowGreeting.jsx":"5","/Users/karishmagajria/React/challenge-react/src/Calc.jsx":"6","/Users/karishmagajria/React/challenge-react/src/NetflixAppClone/Card.jsx":"7","/Users/karishmagajria/React/challenge-react/src/NetflixAppClone/SData.jsx":"8","/Users/karishmagajria/React/challenge-react/src/NetflixAppClone/Sdata.jsx":"9","/Users/karishmagajria/React/challenge-react/src/NetflixAppClone/ShowDetailCard.jsx":"10","/Users/karishmagajria/React/challenge-react/src/NetflixAppClone/FilteredData.jsx":"11","/Users/karishmagajria/React/challenge-react/src/Hooks/Hooks.jsx":"12","/Users/karishmagajria/React/challenge-react/src/Hooks/Hooks2.jsx":"13","/Users/karishmagajria/React/challenge-react/src/Hooks/DigitalClock.jsx":"14","/Users/karishmagajria/React/challenge-react/src/Hooks/Events.jsx":"15","/Users/karishmagajria/React/challenge-react/src/Hooks/Forms1.jsx":"16","/Users/karishmagajria/React/challenge-react/src/APIproject_cryptocurrency/CCTracker.jsx":"17","/Users/karishmagajria/React/challenge-react/src/APIproject_cryptocurrency/Coin.jsx":"18"},{"size":931,"mtime":1608544441231,"results":"19","hashOfConfig":"20"},{"size":6728,"mtime":1611847450984,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1608190666649,"results":"22","hashOfConfig":"20"},{"size":755,"mtime":1608547250152,"results":"23","hashOfConfig":"20"},{"size":757,"mtime":1608279317163,"results":"24","hashOfConfig":"20"},{"size":364,"mtime":1608285338970,"results":"25","hashOfConfig":"20"},{"size":597,"mtime":1608631802564,"results":"26","hashOfConfig":"20"},{"size":1096,"mtime":1608538166367,"results":"27","hashOfConfig":"20"},{"size":1027,"mtime":1608556992674,"results":"28","hashOfConfig":"20"},{"size":2334,"mtime":1608631735140,"results":"29","hashOfConfig":"20"},{"size":788,"mtime":1608630206859,"results":"30","hashOfConfig":"20"},{"size":465,"mtime":1608645039254,"results":"31","hashOfConfig":"20"},{"size":904,"mtime":1608724168989,"results":"32","hashOfConfig":"20"},{"size":446,"mtime":1608729878587,"results":"33","hashOfConfig":"20"},{"size":810,"mtime":1608799142764,"results":"34","hashOfConfig":"20"},{"size":1829,"mtime":1608891410568,"results":"35","hashOfConfig":"20"},{"size":2519,"mtime":1609428420891,"results":"36","hashOfConfig":"20"},{"size":661,"mtime":1609423414723,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"1iq2u5o",{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"49","usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"41"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"41"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"41"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"41"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"41"},"/Users/karishmagajria/React/challenge-react/src/index.js",["88","89"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst fname = 'karishma';\nconst lname = 'gajria Agarwal';\n\nReactDOM.render(\n  \n    <App />\n  \n  // <>\n  //   <h1> CHALLENGE REACT #01</h1>\n  //   {/* <p>My name is {fname} {lname}.I am a top react developer.</p> */}\n  //   <p>My name is {`${fname} ${lname} `}.I am a top react developer.</p>\n  //   <h2> Top series of netflix app</h2>\n  //   <ol>\n  //     <li>Dark</li>\n  //     <li>k3g</li>\n  //     <li>kaho na kaho</li>\n  //     <li>SuperHero</li>\n  //     <li>Devil</li>\n  //   </ol>\n  // </>\n  \n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["90","91"],"/Users/karishmagajria/React/challenge-react/src/App.js",["92","93","94"],"\n// import React from 'react';\n// import ReactDOM  from 'react-dom';\n\n\n// const App = () => {\n//   //#challenge #02\n//   const fname = 'karishma';\n//   const lname = 'gajria Agarwal';\n//   const cDate = `${new Date().getDate()} / ${new Date().getMonth()} / ${new Date().getFullYear()} `;\n\n//  return (\n//   <>\n//     <h1>react challenge - #02</h1>\n//     <h2>react developer - Er . {`${fname} ${lname}`}</h2>\n//  <p>current date is {cDate}</p>\n//   </>\n\n//  )\n// }\n\n// export default App;\n\n\n//#CHALLENGE#03 ====== FAILED BADLYYYY\n/*import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//1 am to 12 pm - gm (green)\n//12 pm  to 7pm  - good Afternoon (orange)\n//7pm to 1 am - good night (black)\nconst App = () => {\n\n  const greetingStyle = {\n    display :  'border-box',\n    backgroundColor : 'white',\n    color : 'gray',\n    margin : '10px 10px',\n    padding : '10px 10px',\n    border :  '2px solid lightgray',\n    marginTop : '250px'\n  }\n\n  //CURRENT TIME\n  // const ctime = new Date().getTime().toString();\n  function formatAMPM(date) {\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? '0'+minutes : minutes;\n    var strTime = hours + ':' + minutes + ' ' + ampm;\n\n    //logic here\n\n    return strTime;\n  }\n  \n  //console.log(formatAMPM(new Date));\n\n  //curren ttitme in hrs\n  const ctime = new Date().getHours().toString();\n  \n  let greeting = '';\n  let gcolor = '';\n  const showgreeting = () => {\n    if (ctime >=1 && ctime <= 11){\n      // console.log('gm!');\n      greeting = 'Good Morning';\n      gcolor = 'green';\n    } else if (ctime >=12 && ctime <= 19) {\n      greeting = 'Good AfterNoon';\n      gcolor = 'orange';\n\n    } else {\n      greeting = \"good night \";\n      gcolor = 'blue';\n\n    }\n    return greeting;\n    return gcolor;\n  }\n\n  return(\n    <>\n      <div className = 'greeting-div'>\n \n//           <h1 style = {greetingStyle}>hello guys ! <span style = {{color: `${gcolor} !important`}}>{showgreeting()}</span> </h1>\n          \n//           {/* <p> {formatAMPM(new Date)}</p> */\n//           {/* <p> {ctime}</p> */}\n\n//         {/* </div>  */}\n//       </div>\n//     </>\n//   );\n// }\n// export default App;*/\n\n//_____________________________________________________________________________\n//##Challenge # completed successfully 😘\n/*import React from 'react';\nimport ReactDOM  from 'react-dom';\n\n\nconst App = () => {\n\n  //current timer in Am -Pm\n  function formatAMPM(date) {\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? '0'+minutes : minutes;\n    var strTime = hours + ':' + minutes + ' ' + ampm;\n    return strTime;\n  }\n  //currnt time in hrs\n  let chr = new Date().getHours();\n  let greeting = \"\";\n  const style = {\n    color : 'black'\n  }\n\n  //logic to show the greeting\n  if (chr>=1 && chr<12){\n    greeting = \"Good Morning 😃\";\n    style.color = 'green'\n  }else if (chr>=12 && chr<=19){\n    greeting = \"Good AFTERNOON 🌤️\";\n    style.color = 'orange'\n  }else{\n    greeting = \"Good Night 😘\";\n    style.color = 'blue'\n  }\n\n\n\n  return(\n    <>\n      <div className = 'container'> \n        <h1>challenge #03</h1>\n        <div className = 'header_div'>\n          <label>{formatAMPM(new Date)}</label>\n        </div>\n      </div>\n      <div className = 'greeting_container'>\n        <h2>Hello Guys! , <span style = {style}>{greeting}</span></h2>\n      </div>\n    </>\n  );\n}\n\nexport default App;*/\n\n//_________________________________________________________________________________________________\n//Challenge # 4 - dividing ythe abopve mini project into several components\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import Header from './Header';\n// import ShowGreeting from './ShowGreeting';\n \n\n// const App =  () => {\n//   return (\n//     <>\n//       {/*Header component */}\n//       <Header/>  \n//       <ShowGreeting/>    \n//     </>\n//   )\n// }\n\n// export default App;\n\n//wow challenge completed successfully..... \n//CHALLENGE 5\n//CREATE A calc ..\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import * as ops from './Calc';\n// const App = () => {\n//   return(\n//     <>\n//       <h1>calculator operations here..</h1>\n//       <ul>\n//         <li>sum is {ops.add(10,20)}</li>\n//         <li>sub is {ops.sub(20,10)}</li>\n//         <li>mul is {ops.mul(10,3)}</li>\n//         <li>div is {ops.div(10,3)}</li>\n//       </ul> \n//       <p>{ops.default}</p>     \n//     </>\n//   );\n// }\n\n// export default App;\n//**************************************************************************** */\n//Netflix app Clone\n//**************************************************************************** */\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport Card from './NetflixAppClone/Card';\nimport Header from './Header';\nimport Sdata from './NetflixAppClone/Sdata';\nimport ShowDetailCard from './NetflixAppClone/ShowDetailCard';\nimport Hooks from './Hooks/Hooks';\nimport Hooks2 from './Hooks/Hooks2';\nimport DigitalClock from './Hooks/DigitalClock';\nimport Events from './Hooks/Events';\nimport Forms1 from './Hooks/Forms1';\nimport CCTracker from './APIproject_cryptocurrency/CCTracker';\n \n\n\nconst App = () => {\n\n  //showing the series acc to their category\n  // const SeriesAccToCategory = () => {\n  //   return (\n  //     Sdata.map((cval, inde)=>{\n  //       console.log(cval);\n  //       <h2 style = {{textAlign : 'center'}}>Thriller</h2>\n  //       if (cval.title === 'thriller'){\n  //         <div>\n  //           <h2>cval.title</h2>\n  //           <Card \n  //           key = {inde}\n  //           imgsrc = {cval.imgsrc}\n  //           sname = {cval.sname}\n  //           title = {cval.title}\n  //           link = {cval.link}/>\n  //         </div>\n  //       }\n  //     })\n  //   )\n  // }\n\n  return(\n    <>\n      <Header heading = 'react challenge - 05'/>\n      <h1 style = {{textAlign :'center'}}>Netflix top series...</h1>\n      <div className = \"card_container\">\n        { Sdata.map((cVal , ind) => {\n          // console.log(ind,cVal);\n          return <Card \n            key = {ind}\n            imgsrc = {cVal.imgsrc}\n            sname = {cVal.sname}\n            title = {cVal.title}\n            link = {cVal.link}/>\n        })}\n      </div>\n      <ShowDetailCard/>\n      <hr/>\n      <Hooks/>\n      <hr/>\n      <Hooks2/>\n      <hr/>\n      <DigitalClock/>\n      <hr/>\n      <Events/>\n      <hr/>\n      <Forms1/>\n  </>\n);\n}\n \nexport default App;","/Users/karishmagajria/React/challenge-react/src/reportWebVitals.js",[],"/Users/karishmagajria/React/challenge-react/src/Header.jsx",["95","96"],"import React from  'react';\nimport ReactDOM from 'react-dom';\n\nconst Header = (props) => { \n  //show current time in AM -Pm format on the header component\n  function formatAMPM(date) {\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? '0'+minutes : minutes;\n    var strTime = hours + ':' + minutes + ' ' + ampm;\n    return strTime;\n  }\n\n  return (\n    <>\n      <div className = 'container'> \n        <h1>{props.heading}</h1>\n        <div className = 'header_div'>\n          <label>{formatAMPM(new Date)}</label>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Header;","/Users/karishmagajria/React/challenge-react/src/ShowGreeting.jsx",["97"],"/Users/karishmagajria/React/challenge-react/src/Calc.jsx",["98","99"],"/Users/karishmagajria/React/challenge-react/src/NetflixAppClone/Card.jsx",["100","101","102","103"],"import Reacxt from 'react';\nimport ReactDOM from 'react-dom';\nimport pic from '../img/img.jpg';\n\nconst Card = (props) => { \n  return (\n    <>\n      <div className = 'card'>\n        <img src = {props.imgsrc} alt = \"img\" className = \"card_img\"/>\n        <div className = \"card_info\">\n          <h3 className = \"card_title\">{props.sname}</h3> \n          <span className = \"card_category\">{props.title}</span>  \n          <br/>\n          <a href = {props.link} target = \"_blank\">\n            <button >Watch now !</button>\n          </a>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Card;","/Users/karishmagajria/React/challenge-react/src/NetflixAppClone/SData.jsx",["104"],"/Users/karishmagajria/React/challenge-react/src/NetflixAppClone/Sdata.jsx",[],"/Users/karishmagajria/React/challenge-react/src/NetflixAppClone/ShowDetailCard.jsx",["105"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from '../Header';\nimport FilteredData from './FilteredData';\n\nconst ShowDetailCard = () => { \n\n  const catObjArr = [\n    {\n      Cid:1,\n      cname : 'thriller'\n    },\n    {\n      Cid:1,\n      cname : 'comedy'\n    },\n    {\n      Cid:1,\n      cname : 'Biography'\n    }\n  ]\n\nreturn (\n    <>\n      <Header heading = 'category wise series'/>\n      {/* <FilteredData category = 'thriller' />\n      <FilteredData category = 'comedy' />\n      <FilteredData category = 'Biography' /> */}\n      {\n        //map method \n        catObjArr.map(cval => {\n         return  <FilteredData category = {cval.cname} />\n        })\n      }\n    </>\n  );\n}\n\nexport default ShowDetailCard;\n\n/*<div>\n  //       {/* <h1 style = {{textAlign :'center'}}>category wise series</h1> */\n  //       <div className = \"card_container\">\n  //       { Sdata.map((cvalue , cind) => {\n  //   if (cvalue.title == 'thriller'){\n  //     console.log(cind,cvalue);\n  \n  //     // {setCat(()=>{'thriller'})}\n  //     // console.log(`cateory is ${cat}`);\n      \n  //     // console.log(`cateory is ${cat}`);\n  //     let elem = (Sdata.splice(cind, 1));\n  //     // const thArr = (prevVal) => { \n  //     //   return [...prevVal , elem];\n  //     // }\n  //     {Sdata.filter(data => data.title == 'thriller').map(filtereddata => (\n  //       <li>\n  //         {filtereddata.sname};\n  //       </li>\n  //     ))}\n  //     console.log(`thArr is: ${thArr}`);\n  //     return (\n  //       <Card \n  //       key = {cind}\n  //       imgsrc = {cvalue.imgsrc}\n  //       sname = {cvalue.sname}\n  //       title = {cvalue.title}\n  //       link = {cvalue.link}/>\n  //     )\n  //   }else if(cvalue.title == 'comedy'){\n  //     // console.log(ind,cVal);\n  //       // {setCat('thriller');}\n  //       // console.log(`cateory is ${cat}`);\n  //       console.log(Sdata.splice(cind, 1));\n  //       const comArr = Sdata.splice(cind, 1);\n  //       console.log(`comArr is: ${comArr}`);\n  //       return (\n  //         <Card \n  //         key = {cind}\n  //         imgsrc = {cvalue.imgsrc}\n  //         sname = {cvalue.sname}\n  //         title = {cvalue.title}\n  //         link = {cvalue.link}/>\n  //       )\n  //   }else{\n  //       console.log('malum nahi kaun si category hai');\n  //     }\n  // })}\n  //     </div> */","/Users/karishmagajria/React/challenge-react/src/NetflixAppClone/FilteredData.jsx",["106","107"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Sdata from './Sdata';\nimport Card from './Card';\n\nconst FilteredData = (props) => {\n\n  const h_style = {\n    textAlign: 'center',\n    backgroundColor: 'lightgray',\n    color: 'darkorange',\n    margin: '0',\n    padding: '5px'\n  }\n\n  return(\n    <>\n      <h4 style = {h_style}>{props.category}</h4>\n      <div className = \"card_container\">\n        {Sdata.filter(data => data.title == `${props.category}`).map((fdata,ind) => (\n          //setting the state of sat\n          <Card \n            key = {ind}\n            imgsrc = {fdata.imgsrc}\n            sname = {fdata.sname}\n            title = {fdata.title}\n            link = {fdata.link}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default FilteredData;","/Users/karishmagajria/React/challenge-react/src/Hooks/Hooks.jsx",["108"],"import React, { useState } from 'react';\nimport ReacxtDOM from 'react-dom';\n\nconst Hooks = () =>{\n\n  //useState @topmost of functional componnets\n  let [count, setCount] = useState(0);\n\n  //function definiation\n  function btnClick(){\n    setCount(count += 1);\n  }\n\n  return(\n    <>\n    <h1>React Hooks #challenge #01</h1>\n      <button onClick = {btnClick} >click Me!!</button>\n      <br/>\n      <label>count is {count}</label>\n    </>\n  );\n}\n\nexport default Hooks;","/Users/karishmagajria/React/challenge-react/src/Hooks/Hooks2.jsx",["109","110"],"import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Hooks2 = () => {\n  let Currenttime = new Date().toLocaleTimeString();\n  const [time , setTime] = useState(Currenttime)\n\n  //current timer in Am -Pm\n  function formatAMPM(date) {\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? '0'+minutes : minutes;\n    var strTime = hours + ':' + minutes + ' ' + ampm;\n    return strTime;\n  }\n\n  const getTime = () => {\n    let newCurrenttime = new Date().toLocaleTimeString();\n    setTime(newCurrenttime);\n  }\n\n  return(\n    <>\n      <h1>challenge 2 on react hooks</h1>\n      <label>{time}</label>   \n      <br/>\n      <button onClick= {getTime} >click me!!</button>  \n    </>\n  );\n}\n\nexport default Hooks2;","/Users/karishmagajria/React/challenge-react/src/Hooks/DigitalClock.jsx",["111"],"import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst DigitalClock = () => { \n\n  let ctime = new Date().toLocaleTimeString();\n  const [time, setTime] = useState(ctime);\n\n  setInterval(()=>{\n    let newCurrentTime = new Date().toLocaleTimeString();\n    setTime(newCurrentTime);\n  }, 1000)\n\n  return(\n    <>\n      <h1>Digital clock recaty challenge</h1>\n      <h1>{time}</h1>\n    </>\n  );\n}\n\nexport default DigitalClock;","/Users/karishmagajria/React/challenge-react/src/Hooks/Events.jsx",["112","113"],"import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Events = () => {\n\n  const [bg,setBg] = useState('blue');\n  const[txt,setTxt] = useState('Karishma');\n  const[clickedOnce, setClickedOnce] = useState(false);\n\n  //function btnClickEvent\n  const btnClickEvent = (event) =>{\n    setBg('cyan');\n    setTxt('gajria');\n    setClickedOnce(true);\n    // {(clickedOnce == true) ? \n    // setBg('green');\n    // setTxt('gajria');}\n\n    if (clickedOnce == true){\n      setBg('green');\n      setTxt('Agarwal');\n    }else{\n      console.log('kuch mat kar')\n    }\n    \n  }\n\n  return(\n    <>\n      <div className = 'eventmain_div' style = {{backgroundColor: bg}}>\n      <button className = 'btn_Event' onClick = {btnClickEvent}>{txt}</button>\n      </div>\n    </>\n  );\n}\n\nexport default Events;","/Users/karishmagajria/React/challenge-react/src/Hooks/Forms1.jsx",["114"],"import React, { useState } from 'react';\nimport RactDOM from 'react-dom';\n\nconst Forms1 = () =>{\n  const[details, setDetails] = useState({\n    fname: '',\n    lname: '',\n    email: ''\n  });\n  \n  const setTheName = (event) => {\n    event.preventDefault();\n    const ename = event.target.name;\n    const evalue = event.target.value;\n\n    // const{name, value} = event.target;\n\n    setDetails((preValue)=> {\n      return {\n        ...preValue,\n        [ename]: evalue\n      }\n    })\n\n    // if(ename === 'fname'){\n    //   setDetails((prevState)=>{\n    //     return {\n    //       firstname: evalue,\n    //       lastname: prevState.lastname,\n    //       email: prevState.email\n    //     }\n    //   })\n    // }else if(ename === 'lname'){\n    //   setDetails((prevState)=>{\n    //     return {\n    //       firstname: prevState.firstname,\n    //       lastname: evalue,\n    //       email: prevState.email\n    //     }\n    //   })\n    // }else\n    // {\n    //   setDetails((prevState)=>{\n    //     return {\n    //         firstname: prevState.firstname,\n    //         lastname: prevState.lastname,\n    //         email: evalue\n    //       }\n    //     })\n    // }\n  }\n\n  \n\n  return(\n    <>\n      <h1>forms1 react challenge</h1>\n      <h2>hello! {details.fname} {details.lname}</h2>\n      <h4>{details.email}</h4>\n      <form onSubmit = {setTheName}>\n        <input type = 'text' placeholder = 'enter your Firstname' name = 'fname' onChange = {setTheName}></input>\n        <br/>\n        <input type = 'text' placeholder = 'enter your LastName' name = 'lname' onChange = {setTheName}></input>\n        <br/>\n        <input type = 'text' placeholder = 'enter your Email' name = 'email' onChange = {setTheName}></input>\n        <br/>\n        <button type = 'submit'>Submit</button>\n      </form>\n    </>\n  );\n}\nexport default Forms1;","/Users/karishmagajria/React/challenge-react/src/APIproject_cryptocurrency/CCTracker.jsx",["115","116","117","118"],"//url\n//https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\n//returning AN array of objects as response\n\nimport React, {useEffect,useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from \"axios\";\nimport Coin from './Coin';\nconst CCTracker = () =>{\n\n  const [coins,setCoins] = useState([]);\n  const [search,setSearch] = useState('');\n  const [fltrcoins, setfltrcoins] = useState(false);\n  \n\n  useEffect(()=>{\n    axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')\n    .then(res=>{\n      setCoins(res.data);\n      // console.log(res.data)\n    }).catch(error => {\n      console.log(error);\n    })\n  },[])\n\n  const handleChange = e => {\n    setSearch(e.target.value);\n    setfltrcoins(true);\n    // alert('search is:', search);\n  }\n\n  const filterCoins = coins.filter((coin) =>\n  {\n    //console.log('filterdata -- coins:',coins);\n\n    coin.name.toLowerCase().includes(search.toLowerCase())\n    //coin.name.toLowerCase().includes('Bitcoin');\n  })\n\n  const showCoins = () => {\n    // {fltrcoins === false ? \n    //   mapCoins(coins):  null\n    // }\n    if(fltrcoins === false){\n      mapCoins(coins)\n    }else{\n      console.log('show nothing!');\n    }\n  }\n\n\n  const mapCoins = (arr) => {\n    arr.map(coin =>{\n      console.log('coin is:',coin);\n      return(\n        <Coin key={coin.id}\n        name = {coin.name}\n        price = {coin.current_price}\n        volume = {coin.volume}\n        image = {coin.image}\n        symbol = {coin.market_cap}\n        />\n      )\n    })\n  }\n  //console.log('filterCoins:', filterCoins);\n  //alert('filterCoins...->',filterCoins);\n\n  return(\n    <>\n      <div className = 'coin-app'>\n        <div className = 'coin-search'>\n          <h1 className = 'coin-text'>Search A Currency</h1>\n          <form>\n            <input type = 'text' placeholder = 'Search' className = 'coin-input' onChange= {handleChange}/>\n          </form>\n        </div>\n        {/* {showCoins()} */}\n        \n        { (fltrcoins === false) ? \n          coins.map(coin =>{\n          console.log('coin is:',coin);\n          return(\n            <Coin key={coin.id}\n            name = {coin.name}\n            price = {coin.current_price}\n            volume = {coin.volume}\n            image = {coin.image}\n            symbol = {coin.market_cap}\n            />\n          )\n        }): null }\n      </div>\n    </>\n  );\n}\nexport default CCTracker;\n\n\n\n","/Users/karishmagajria/React/challenge-react/src/APIproject_cryptocurrency/Coin.jsx",["119"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Coin = ({name, image,symbol,price,volume}) =>{\n  return(\n    <>\n      <div className ='coin-container'>\n        <div className = 'coin-row'>\n          <div className = 'coin'>\n            <img src = {image} alt = 'crypto'/>\n            <h1>{name}</h1>\n            <p className=\"coin-symbol\">\n              {symbol}\n            </p>\n          </div>\n          <div className=\"coin-data\">\n            <p className=\"coin-price\">${price}</p>\n        {/* <p className=\"coin-volume\">${volume.tolocalestring()}</p> */}\n\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default Coin;",{"ruleId":"120","severity":1,"message":"121","line":7,"column":7,"nodeType":"122","messageId":"123","endLine":7,"endColumn":12},{"ruleId":"120","severity":1,"message":"124","line":8,"column":7,"nodeType":"122","messageId":"123","endLine":8,"endColumn":12},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"120","severity":1,"message":"129","line":204,"column":17,"nodeType":"122","messageId":"123","endLine":204,"endColumn":25},{"ruleId":"120","severity":1,"message":"130","line":205,"column":8,"nodeType":"122","messageId":"123","endLine":205,"endColumn":16},{"ruleId":"120","severity":1,"message":"131","line":215,"column":8,"nodeType":"122","messageId":"123","endLine":215,"endColumn":17},{"ruleId":"120","severity":1,"message":"130","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":16},{"ruleId":"132","severity":1,"message":"133","line":22,"column":30,"nodeType":"134","messageId":"135","endLine":22,"endColumn":38,"fix":"136"},{"ruleId":"120","severity":1,"message":"130","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":16},{"ruleId":"120","severity":1,"message":"137","line":1,"column":8,"nodeType":"122","messageId":"123","endLine":1,"endColumn":13},{"ruleId":"120","severity":1,"message":"130","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":16},{"ruleId":"120","severity":1,"message":"138","line":1,"column":8,"nodeType":"122","messageId":"123","endLine":1,"endColumn":14},{"ruleId":"120","severity":1,"message":"130","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":16},{"ruleId":"120","severity":1,"message":"139","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":11},{"ruleId":"140","severity":1,"message":"141","line":14,"column":34,"nodeType":"142","endLine":14,"endColumn":51},{"ruleId":"120","severity":1,"message":"143","line":2,"column":7,"nodeType":"122","messageId":"123","endLine":2,"endColumn":12},{"ruleId":"120","severity":1,"message":"130","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":16},{"ruleId":"120","severity":1,"message":"130","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":16},{"ruleId":"144","severity":1,"message":"145","line":20,"column":42,"nodeType":"146","messageId":"147","endLine":20,"endColumn":44},{"ruleId":"120","severity":1,"message":"148","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":17},{"ruleId":"120","severity":1,"message":"130","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":16},{"ruleId":"120","severity":1,"message":"149","line":9,"column":12,"nodeType":"122","messageId":"123","endLine":9,"endColumn":22},{"ruleId":"120","severity":1,"message":"130","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":16},{"ruleId":"120","severity":1,"message":"130","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":16},{"ruleId":"144","severity":1,"message":"145","line":19,"column":21,"nodeType":"146","messageId":"147","endLine":19,"endColumn":23},{"ruleId":"120","severity":1,"message":"150","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":15},{"ruleId":"120","severity":1,"message":"130","line":6,"column":8,"nodeType":"122","messageId":"123","endLine":6,"endColumn":16},{"ruleId":"120","severity":1,"message":"151","line":32,"column":9,"nodeType":"122","messageId":"123","endLine":32,"endColumn":20},{"ruleId":"152","severity":1,"message":"153","line":32,"column":43,"nodeType":"154","messageId":"155","endLine":32,"endColumn":45},{"ruleId":"120","severity":1,"message":"156","line":40,"column":9,"nodeType":"122","messageId":"123","endLine":40,"endColumn":18},{"ruleId":"120","severity":1,"message":"130","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":16},"no-unused-vars","'fname' is assigned a value but never used.","Identifier","unusedVar","'lname' is assigned a value but never used.","no-native-reassign",["157"],"no-negated-in-lhs",["158"],"'useState' is defined but never used.","'ReactDOM' is defined but never used.","'CCTracker' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"159","text":"160"},"'React' is defined but never used.","'Reacxt' is defined but never used.","'pic' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Sdata' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ReacxtDOM' is defined but never used.","'formatAMPM' is defined but never used.","'RactDOM' is defined but never used.","'filterCoins' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'showCoins' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[679,679],"()"]